---
interface Tech {
  name: string;
  icon: any;
}

export interface Props {
  title: string;
  description: string;
  date: string;
  link?: string;
  techStack: Tech[];
  achievements?: string[];
}
const { title, description, date, link, techStack, achievements } = { ...Astro.props };
---

<div
  class="absolute w-3 h-3 bg-white rounded-full mt-1.5 -start-1.5 border border-white"
>
</div>
<time class="mb-1 text-sm font-normal leading-none opacity-80">{date}</time>
<h3 class="text-xl text-blue-900 dark:text-blue-400 font-bold">
  {title}
</h3>
<p class="mb-4 text-base font-normal text-pretty">
  {description}
</p>

{achievements && achievements.length > 0 && (
  <ul class="list-disc list-inside mb-4 text-pretty">
    {achievements.map((achievement) => (
      <li>{achievement}</li>
    ))}
  </ul>
)}

<div class="flex gap-4">
  <ul class="flex flex-row mb-2 gap-x-2">
    {
      techStack.map((tech) => (
        <li>
          <span class={`flex gap-x-2 rounded-full text-xs py-1 px-2 `}>
            <tech.icon class="size-5" />
          </span>
        </li>
      ))
    }
  </ul>
</div>
{
  link && (
    <a
      href={link}
      class="inline-flex items-center px-4 py-2 text-sm font-medium rounded-lg bg-blue bg-opacity-20 border border-blue-900 dark:border-blue-400 text-blue-900 dark:text-blue-400 hover:bg-black dark:hover:bg-white hover:text-white dark:hover:text-black hover:border-white dark:hover:border-white transition"
    >
      Visit
      <svg
        class="w-3 h-3 ms-2 rtl:rotate-180"
        aria-hidden="true"
        xmlns="http://www.w3.org/2000/svg"
        fill="none"
        viewBox="0 0 14 10"
      >
        <path
          stroke="currentColor"
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="2"
          d="M1 5h12m0 0L9 1m4 4L9 9"
        />
      </svg>
    </a>
  )
}
